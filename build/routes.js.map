{"version":3,"sources":["../src/routes.js"],"names":["String","prototype","hashCode","hash","i","chr","length","charCodeAt","getBaseUrl","req","hostname","protocol","upload","storage","multer","memoryStorage","app","post","single","res","console","log","mimetype","buffer","file","doc","no","params","buf","json","get","render","title","subtitle","baseUrl","pageno","parseInt","query","pagesize","isNaN","contactlist","jsonp","contact","toObject","next","name","err","Error","status","contacts","body","tel","address","put","delete","setHeader","end","image","use","message"],"mappings":"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","file":"routes.js","sourcesContent":["import multer from 'multer';\r\nimport sleep from 'sleep-promise';\r\nimport { changePhoto, getPhotoImage, batchInsertContacts, contactsAll, contactOne, searchContact, insertContact, updateContact, deleteContact } from './db';\r\n\r\n\r\nString.prototype.hashCode = function() {\r\n  var hash = 0, i, chr;\r\n  if (this.length === 0) return hash;\r\n  for (i = 0; i < this.length; i++) {\r\n    chr   = this.charCodeAt(i);\r\n    hash  = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n  return hash;\r\n};\r\n\r\nconst getBaseUrl = (req) =>  { \r\n    if (req.hostname === \"localhost\" || req.hostname === \"127.0.0.1\")\r\n        return  req.protocol + \"://\" + req.hostname;\r\n    else\r\n        return \"https://\" + req.hostname;\r\n}\r\nconst upload = multer({ storage : multer.memoryStorage()});\r\n\r\nexport default (app) => { \r\n\r\n    app.post('/contacts/:no/photo', upload.single('photo'), async (req, res) => {\r\n        console.log(\"### POST /contacts/:no/photo\");\r\n        const { mimetype, buffer } = req.file;\r\n        let doc = await changePhoto({ no:req.params.no, buf:buffer, mimetype })\r\n        res.json(doc);\r\n    });\r\n\r\n    app.get('/', (req, res) => {\r\n        console.log(\"### GET /\");\r\n        res.render('index', {\r\n             title: '연락처서비스 v2.0',\r\n             subtitle : '(node.js + express + mongodb)'\r\n        })\r\n    });\r\n\r\n    app.get('/contacts', async (req, res) => {\r\n        console.log(\"### GET /contacts\");\r\n        const baseUrl = getBaseUrl(req);\r\n        let pageno = parseInt(req.query.pageno);\r\n        let pagesize = parseInt(req.query.pagesize);\r\n        if (isNaN(pageno)) pageno=0;\r\n        if (isNaN(pagesize)) pagesize=5;\r\n        if (pageno==0)  pagesize = 0;\r\n\r\n        const contactlist = await contactsAll({ pageno:pageno, pagesize:pagesize, baseUrl:baseUrl })\r\n        res.jsonp(contactlist);\r\n    });\r\n\r\n    app.get('/contacts_long', async (req, res) => {\r\n        console.log(\"### GET /contacts_long\");\r\n        await sleep(1000)\r\n        const baseUrl = getBaseUrl(req);\r\n        let pageno = parseInt(req.query.pageno);\r\n        let pagesize = parseInt(req.query.pagesize);\r\n        if (isNaN(pageno)) pageno=0;\r\n        if (isNaN(pagesize)) pagesize=5;\r\n        if (pageno==0)  pagesize = 0;\r\n\r\n        const contactlist = await contactsAll({ pageno:pageno, pagesize:pagesize, baseUrl:baseUrl })\r\n        res.jsonp(contactlist);\r\n    });\r\n\r\n    app.get('/contacts/:no', async (req,res) => {\r\n        console.log(\"### GET /contacts/:no\");\r\n        const baseUrl = getBaseUrl(req);\r\n        const no = req.params.no;\r\n        const contact = await contactOne({ no:no, baseUrl });\r\n        if (contact.toObject)\r\n            res.jsonp(contact.toObject());\r\n        else \r\n            res.jsonp(contact)\r\n    });\r\n\r\n    app.get('/contacts/search/:name', async (req,res,next) => {\r\n        const name = req.params.name;\r\n        if (typeof(name) !== \"string\" || name.length < 2) {\r\n            var err = new Error(\"두글자 이상의 이름을 입력하세요\");\r\n            err.status = 400;\r\n            next(err);\r\n        }\r\n        console.log(\"### GET /contacts/search/:name\")\r\n        const baseUrl = getBaseUrl(req);\r\n        const contacts = await searchContact({ name, baseUrl })\r\n        res.jsonp(contacts);\r\n    });\r\n\r\n    app.get('/contacts_long/search/:name', async (req,res, next) => {\r\n        const name = req.params.name;\r\n        if (typeof(name) !== \"string\" || name.length < 2) {\r\n            var err = new Error(\"두글자 이상의 이름을 입력하세요\");\r\n            err.status = 400;\r\n            next(err);\r\n        }\r\n        console.log(\"### GET /contacts/search/:name\")\r\n        await sleep(1000);\r\n        const baseUrl = getBaseUrl(req);\r\n        const contacts = await searchContact({ name, baseUrl })\r\n        res.jsonp(contacts);\r\n        \r\n    });\r\n\r\n    app.post('/contacts', async (req,res) => {\r\n        console.log(\"### POST /contacts\");\r\n        let name = req.body.name;\r\n        let tel = req.body.tel;\r\n        let address = req.body.address;\r\n\r\n        const doc = await insertContact({ name, tel, address })\r\n        res.jsonp(doc);\r\n    });\r\n\r\n    app.put('/contacts/:no', async (req,res) => {\r\n        console.log(\"### PUT /contacts/:no\");\r\n        var no = req.params.no;\r\n        var name = req.body.name;\r\n        var tel = req.body.tel;\r\n        var address = req.body.address;\r\n\r\n        const doc = await updateContact({ no, name, tel, address });\r\n        res.jsonp(doc);\r\n    });\r\n\r\n    app.delete('/contacts/:no', async (req,res) => {\r\n        console.log(\"### DELETE /contacts/:no\");\r\n        var no = req.params.no\r\n        const doc = await deleteContact({ no })\r\n        res.jsonp(doc);\r\n    });\r\n\r\n    app.post('/contacts/batchinsert', async (req,res) => {\r\n        console.log(\"### POST /contacts/batchinsert\");\r\n        let contacts = req.body;\r\n        const doc = await batchInsertContacts({ contacts: contacts })\r\n        res.jsonp(doc);\r\n    });\r\n\r\n    app.get('/photos/:no', async (req,res, )=> {\r\n        let doc = await getPhotoImage({ no: req.params.no });\r\n        if (doc) {\r\n          res.setHeader('Content-Type', doc.mimetype);\r\n          res.end(doc.image);\r\n        } else {\r\n          res.status(404);\r\n          res.end();\r\n        }\r\n    })\r\n\r\n    //----에러 처리 시작\r\n    app.get('*', (req, res, next) => {\r\n        var err = new Error();\r\n        err.status = 404;\r\n        next(err);\r\n    });\r\n \r\n    app.use((err, req, res, next) => {\r\n        console.log(\"### ERROR!!\")\r\n        if(err.status === 404) {\r\n            res.status(404).jsonp({ status:404, message:\"잘못된 URI 요청\"});\r\n        } else if (err.status === 500) {\r\n            res.status(500).jsonp({ status:500, message:\"내부 서버 오류\"});\r\n        } else {\r\n            res.status(err.status).jsonp({ status:\"fail\", message:err.message });\r\n        }\r\n    });\r\n}\r\n\r\n"]}