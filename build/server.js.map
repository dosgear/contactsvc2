{"version":3,"sources":["../src/server.js"],"names":["app","use","enable","baseDir","path","resolve","logDirectory","join","fs","existsSync","mkdirSync","accessLogStream","interval","stream","set","process","env","PORT","express","static","console","log","engine","require","renderFile","bodyParser","json","urlencoded","extended","server","listen","get"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIE,MAAJ,CAAW,gBAAX,E,CAAgC;AAChC;;AAEA,IAAIC,UAAUC,eAAKC,OAAL,CAAa,GAAb,CAAd;;AAEA,MAAMC,eAAeF,eAAKG,IAAL,CAAUJ,OAAV,EAAmB,MAAnB,CAArB;AACAK,aAAGC,UAAH,CAAcH,YAAd,KAA+BE,aAAGE,SAAH,CAAaJ,YAAb,CAA/B;AACA,IAAIK,kBAAkB,kCAAI,YAAJ,EAAkB;AACtCC,YAAU,IAD4B,EACtB;AAChBR,QAAME;AAFgC,CAAlB,CAAtB;AAIAN,IAAIC,GAAJ,CAAQ,oBAAO,UAAP,EAAmB,EAACY,QAAQF,eAAT,EAAnB,CAAR;;AAEAX,IAAIc,GAAJ,CAAQ,MAAR,EAAiBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAArC;;AAEAjB,IAAIC,GAAJ,CAAQiB,kBAAQC,MAAR,CAAehB,UAAU,SAAzB,CAAR;AACAiB,QAAQC,GAAR,CAAYlB,UAAU,QAAtB;AACAH,IAAIc,GAAJ,CAAQ,OAAR,EAAiBX,UAAU,QAA3B;AACAH,IAAIc,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAd,IAAIsB,MAAJ,CAAW,MAAX,EAAmBC,QAAQ,KAAR,EAAeC,UAAlC;AACAxB,IAAIC,GAAJ,CAAQwB,qBAAWC,IAAX,EAAR;AACA1B,IAAIC,GAAJ,CAAQwB,qBAAWE,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;;AAIA,sBAAO5B,GAAP;;AAEA,MAAM6B,SAAS7B,IAAI8B,MAAJ,CAAW9B,IAAI+B,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAW;AAClDX,UAAQC,GAAR,CAAY,cAAcrB,IAAI+B,GAAJ,CAAQ,MAAR,CAAd,GAAgC,iBAA5C;AACH,CAFc,CAAf","file":"server.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport morgan from 'cors';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport rfs from 'rotating-file-stream';\r\nimport routes from './routes';\r\n\r\nconst app = express();\r\n\r\napp.use(cors());\r\napp.enable(\"jsonp callback\");   //jsonp 지원\r\n//-- 로깅\r\n\r\nvar baseDir = path.resolve('.');\r\n\r\nconst logDirectory = path.join(baseDir, '/log')\r\nfs.existsSync(logDirectory) || fs.mkdirSync(logDirectory)\r\nvar accessLogStream = rfs('access.log', {\r\n  interval: '1d', // 매일 매일 로그 파일 생성\r\n  path: logDirectory\r\n})\r\napp.use(morgan('combined', {stream: accessLogStream}))\r\n\r\napp.set('port', (process.env.PORT || 3000));\r\n\r\napp.use(express.static(baseDir + '/public'));\r\nconsole.log(baseDir + '/views');\r\napp.set('views', baseDir + '/views');\r\napp.set('view engine', 'ejs');\r\napp.engine('html', require('ejs').renderFile);\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({\r\n  extended: true\r\n}));\r\n\r\nroutes(app);\r\n\r\nconst server = app.listen(app.get('port'), function() {\r\n    console.log(\"연락처 서비스가 \" + app.get('port') + \"번 포트에서 시작되었습니다!\");\r\n});\r\n\r\n\r\n\r\n"]}